{"version":3,"file":"js/999.a1e12b02.js","mappings":"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","sources":["webpack://epidemiologia/../../src/components/VAppBar/VAppBarTitle.tsx","webpack://epidemiologia/../../src/components/VLayout/VLayout.tsx","webpack://epidemiologia/../../src/components/VSlideGroup/helpers.ts","webpack://epidemiologia/../../src/components/VSlideGroup/VSlideGroup.tsx","webpack://epidemiologia/../../src/components/VTabs/shared.ts","webpack://epidemiologia/../../src/components/VTabs/VTab.tsx","webpack://epidemiologia/../../src/components/VTabs/VTabs.tsx","webpack://epidemiologia/../../src/directives/touch/index.ts","webpack://epidemiologia/../../src/components/VWindow/VWindow.tsx","webpack://epidemiologia/../../src/components/VWindow/VWindowItem.tsx","webpack://epidemiologia/./src/views/frm/GFrmView.vue","webpack://epidemiologia/./src/views/frm/GFrmView.vue?1995","webpack://epidemiologia/../../src/components/VAppBar/VAppBar.tsx"],"sourcesContent":["// Components\nimport { VToolbarTitle } from '@/components/VToolbar'\n\n// Utilities\nimport { makeVToolbarTitleProps } from '@/components/VToolbar/VToolbarTitle'\nimport { genericComponent, useRender } from '@/util'\n\n// Types\nimport type { VToolbarTitleSlots } from '@/components/VToolbar/VToolbarTitle'\n\nexport const VAppBarTitle = genericComponent<VToolbarTitleSlots>()({\n  name: 'VAppBarTitle',\n\n  props: makeVToolbarTitleProps(),\n\n  setup (props, { slots }) {\n    useRender(() => (\n      <VToolbarTitle\n        { ...props }\n        class=\"v-app-bar-title\"\n        v-slots={ slots }\n      />\n    ))\n\n    return {}\n  },\n})\n\nexport type VAppBarTitle = InstanceType<typeof VAppBarTitle>\n","// Styles\nimport './VLayout.sass'\n\n// Composables\nimport { createLayout, makeLayoutProps } from '@/composables/layout'\n\n// Utilities\nimport { genericComponent, useRender } from '@/util'\n\nexport const VLayout = genericComponent()({\n  name: 'VLayout',\n\n  props: makeLayoutProps(),\n\n  setup (props, { slots }) {\n    const { layoutClasses, layoutStyles, getLayoutItem, items, layoutRef } = createLayout(props)\n\n    useRender(() => (\n      <div ref={ layoutRef } class={ layoutClasses.value } style={ layoutStyles.value }>\n        { slots.default?.() }\n      </div>\n    ))\n\n    return {\n      getLayoutItem,\n      items,\n    }\n  },\n})\n\nexport type VLayout = InstanceType<typeof VLayout>\n","export function bias (val: number) {\n  const c = 0.501\n  const x = Math.abs(val)\n  return Math.sign(val) * (x / ((1 / c - 2) * (1 - x) + 1))\n}\n\nexport function calculateUpdatedOffset ({\n  selectedElement,\n  containerSize,\n  contentSize,\n  isRtl,\n  currentScrollOffset,\n  isHorizontal,\n}: {\n  selectedElement: HTMLElement\n  containerSize: number\n  contentSize: number\n  isRtl: boolean\n  currentScrollOffset: number\n  isHorizontal: boolean\n}): number {\n  const clientSize = isHorizontal ? selectedElement.clientWidth : selectedElement.clientHeight\n  const offsetStart = isHorizontal ? selectedElement.offsetLeft : selectedElement.offsetTop\n  const adjustedOffsetStart = isRtl && isHorizontal ? (contentSize - offsetStart - clientSize) : offsetStart\n\n  const totalSize = containerSize + currentScrollOffset\n  const itemOffset = clientSize + adjustedOffsetStart\n  const additionalOffset = clientSize * 0.4\n\n  if (adjustedOffsetStart <= currentScrollOffset) {\n    currentScrollOffset = Math.max(adjustedOffsetStart - additionalOffset, 0)\n  } else if (totalSize <= itemOffset) {\n    currentScrollOffset = Math.min(currentScrollOffset - (totalSize - itemOffset - additionalOffset), contentSize - containerSize)\n  }\n\n  return currentScrollOffset\n}\n\nexport function calculateCenteredOffset ({\n  selectedElement,\n  containerSize,\n  contentSize,\n  isRtl,\n  isHorizontal,\n}: {\n  selectedElement: HTMLElement\n  containerSize: number\n  contentSize: number\n  isRtl: boolean\n  isHorizontal: boolean\n}): number {\n  const clientSize = isHorizontal ? selectedElement.clientWidth : selectedElement.clientHeight\n  const offsetStart = isHorizontal ? selectedElement.offsetLeft : selectedElement.offsetTop\n\n  const offsetCentered = isRtl && isHorizontal\n    ? contentSize - offsetStart - clientSize / 2 - containerSize / 2\n    : offsetStart + clientSize / 2 - containerSize / 2\n\n  return Math.min(contentSize - containerSize, Math.max(0, offsetCentered))\n}\n","// Styles\nimport './VSlideGroup.sass'\n\n// Components\nimport { VFadeTransition } from '@/components/transitions'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { makeGroupProps, useGroup } from '@/composables/group'\nimport { makeTagProps } from '@/composables/tag'\nimport { useDisplay } from '@/composables'\nimport { useResizeObserver } from '@/composables/resizeObserver'\nimport { useRtl } from '@/composables/locale'\n\n// Utilities\nimport { computed, ref, watch } from 'vue'\nimport { clamp, genericComponent, IN_BROWSER, useRender } from '@/util'\nimport { bias, calculateCenteredOffset, calculateUpdatedOffset } from './helpers'\n\n// Types\nimport type { InjectionKey } from 'vue'\nimport type { GroupProvide } from '@/composables/group'\n\nexport const VSlideGroupSymbol: InjectionKey<GroupProvide> = Symbol.for('vuetify:v-slide-group')\n\ninterface SlideGroupSlot {\n  next: GroupProvide['next']\n  prev: GroupProvide['prev']\n  select: GroupProvide['select']\n  isSelected: GroupProvide['isSelected']\n}\n\ntype VSlideGroupSlots = {\n  default: [SlideGroupSlot]\n  prev: [SlideGroupSlot]\n  next: [SlideGroupSlot]\n}\n\nexport const VSlideGroup = genericComponent<VSlideGroupSlots>()({\n  name: 'VSlideGroup',\n\n  props: {\n    centerActive: Boolean,\n    direction: {\n      type: String,\n      default: 'horizontal',\n    },\n    symbol: {\n      type: null,\n      default: VSlideGroupSymbol,\n    },\n    nextIcon: {\n      type: IconValue,\n      default: '$next',\n    },\n    prevIcon: {\n      type: IconValue,\n      default: '$prev',\n    },\n    showArrows: {\n      type: [Boolean, String],\n      validator: (v: any) => (\n        typeof v === 'boolean' || [\n          'always',\n          'desktop',\n          'mobile',\n        ].includes(v)\n      ),\n    },\n\n    ...makeTagProps(),\n    ...makeGroupProps({\n      selectedClass: 'v-slide-group-item--active',\n    }),\n  },\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { isRtl } = useRtl()\n    const { mobile } = useDisplay()\n    const group = useGroup(props, props.symbol)\n    const isOverflowing = ref(false)\n    const scrollOffset = ref(0)\n    const containerSize = ref(0)\n    const contentSize = ref(0)\n    const isHorizontal = computed(() => props.direction === 'horizontal')\n\n    const { resizeRef: containerRef, contentRect: containerRect } = useResizeObserver()\n    const { resizeRef: contentRef, contentRect } = useResizeObserver()\n\n    const firstSelectedIndex = computed(() => {\n      if (!group.selected.value.length) return -1\n\n      return group.items.value.findIndex(item => item.id === group.selected.value[0])\n    })\n\n    const lastSelectedIndex = computed(() => {\n      if (!group.selected.value.length) return -1\n\n      return group.items.value.findIndex(item => item.id === group.selected.value[group.selected.value.length - 1])\n    })\n\n    if (IN_BROWSER) {\n      let frame = -1\n      watch(() => [group.selected.value, containerRect.value, contentRect.value, isHorizontal.value], () => {\n        cancelAnimationFrame(frame)\n        frame = requestAnimationFrame(() => {\n          if (containerRect.value && contentRect.value) {\n            const sizeProperty = isHorizontal.value ? 'width' : 'height'\n\n            containerSize.value = containerRect.value[sizeProperty]\n            contentSize.value = contentRect.value[sizeProperty]\n\n            isOverflowing.value = containerSize.value + 1 < contentSize.value\n          }\n\n          if (firstSelectedIndex.value >= 0 && contentRef.value) {\n            // TODO: Is this too naive? Should we store element references in group composable?\n            const selectedElement = contentRef.value.children[lastSelectedIndex.value] as HTMLElement\n\n            if (firstSelectedIndex.value === 0 || !isOverflowing.value) {\n              scrollOffset.value = 0\n            } else if (props.centerActive) {\n              scrollOffset.value = calculateCenteredOffset({\n                selectedElement,\n                containerSize: containerSize.value,\n                contentSize: contentSize.value,\n                isRtl: isRtl.value,\n                isHorizontal: isHorizontal.value,\n              })\n            } else if (isOverflowing.value) {\n              scrollOffset.value = calculateUpdatedOffset({\n                selectedElement,\n                containerSize: containerSize.value,\n                contentSize: contentSize.value,\n                isRtl: isRtl.value,\n                currentScrollOffset: scrollOffset.value,\n                isHorizontal: isHorizontal.value,\n              })\n            }\n          }\n        })\n      })\n    }\n\n    const disableTransition = ref(false)\n\n    let startTouch = 0\n    let startOffset = 0\n\n    function onTouchstart (e: TouchEvent) {\n      const sizeProperty = isHorizontal.value ? 'clientX' : 'clientY'\n      const sign = isRtl.value && isHorizontal.value ? -1 : 1\n      startOffset = sign * scrollOffset.value\n      startTouch = e.touches[0][sizeProperty]\n      disableTransition.value = true\n    }\n\n    function onTouchmove (e: TouchEvent) {\n      if (!isOverflowing.value) return\n\n      const sizeProperty = isHorizontal.value ? 'clientX' : 'clientY'\n      const sign = isRtl.value && isHorizontal.value ? -1 : 1\n      scrollOffset.value = sign * (startOffset + startTouch - e.touches[0][sizeProperty])\n    }\n\n    function onTouchend (e: TouchEvent) {\n      const maxScrollOffset = contentSize.value - containerSize.value\n\n      if (scrollOffset.value < 0 || !isOverflowing.value) {\n        scrollOffset.value = 0\n      } else if (scrollOffset.value >= maxScrollOffset) {\n        scrollOffset.value = maxScrollOffset\n      }\n\n      disableTransition.value = false\n    }\n\n    function onScroll () {\n      if (!containerRef.value) return\n\n      containerRef.value[isHorizontal.value ? 'scrollLeft' : 'scrollTop'] = 0\n    }\n\n    const isFocused = ref(false)\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n\n      if (!isOverflowing.value || !contentRef.value) return\n\n      // Focused element is likely to be the root of an item, so a\n      // breadth-first search will probably find it in the first iteration\n      for (const el of e.composedPath()) {\n        for (const item of contentRef.value.children) {\n          if (item === el) {\n            scrollOffset.value = calculateUpdatedOffset({\n              selectedElement: item as HTMLElement,\n              containerSize: containerSize.value,\n              contentSize: contentSize.value,\n              isRtl: isRtl.value,\n              currentScrollOffset: scrollOffset.value,\n              isHorizontal: isHorizontal.value,\n            })\n            return\n          }\n        }\n      }\n    }\n\n    function onFocusout (e: FocusEvent) {\n      isFocused.value = false\n    }\n\n    function onFocus (e: FocusEvent) {\n      if (\n        !isFocused.value &&\n        !(e.relatedTarget && contentRef.value?.contains(e.relatedTarget as Node))\n      ) focus()\n    }\n\n    function onKeydown (e: KeyboardEvent) {\n      if (!contentRef.value) return\n\n      if (isHorizontal.value) {\n        if (e.key === 'ArrowRight') {\n          focus(isRtl.value ? 'prev' : 'next')\n        } else if (e.key === 'ArrowLeft') {\n          focus(isRtl.value ? 'next' : 'prev')\n        }\n      } else {\n        if (e.key === 'ArrowDown') {\n          focus('next')\n        } else if (e.key === 'ArrowUp') {\n          focus('prev')\n        }\n      }\n\n      if (e.key === 'Home') {\n        focus('first')\n      } else if (e.key === 'End') {\n        focus('last')\n      }\n    }\n\n    function focus (location?: 'next' | 'prev' | 'first' | 'last') {\n      if (!contentRef.value) return\n\n      if (!location) {\n        const focusable = [...contentRef.value.querySelectorAll(\n          'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n        )].filter(el => !el.hasAttribute('disabled')) as HTMLElement[]\n        focusable[0]?.focus()\n      } else if (location === 'next') {\n        const el = contentRef.value.querySelector(':focus')?.nextElementSibling as HTMLElement | undefined\n        if (el) el.focus()\n        else focus('first')\n      } else if (location === 'prev') {\n        const el = contentRef.value.querySelector(':focus')?.previousElementSibling as HTMLElement | undefined\n        if (el) el.focus()\n        else focus('last')\n      } else if (location === 'first') {\n        (contentRef.value.firstElementChild as HTMLElement)?.focus()\n      } else if (location === 'last') {\n        (contentRef.value.lastElementChild as HTMLElement)?.focus()\n      }\n    }\n\n    function scrollTo (location: 'prev' | 'next') {\n      const newAbsoluteOffset = scrollOffset.value + (location === 'prev' ? -1 : 1) * containerSize.value\n\n      scrollOffset.value = clamp(newAbsoluteOffset, 0, contentSize.value - containerSize.value)\n    }\n\n    const contentStyles = computed(() => {\n      // This adds friction when scrolling the 'wrong' way when at max offset\n      let scrollAmount = scrollOffset.value > contentSize.value - containerSize.value\n        ? -(contentSize.value - containerSize.value) + bias(contentSize.value - containerSize.value - scrollOffset.value)\n        : -scrollOffset.value\n\n      // This adds friction when scrolling the 'wrong' way when at min offset\n      if (scrollOffset.value <= 0) {\n        scrollAmount = bias(-scrollOffset.value)\n      }\n\n      const sign = isRtl.value && isHorizontal.value ? -1 : 1\n      return {\n        transform: `translate${isHorizontal.value ? 'X' : 'Y'}(${sign * scrollAmount}px)`,\n        transition: disableTransition.value ? 'none' : '',\n        willChange: disableTransition.value ? 'transform' : '',\n      }\n    })\n\n    const slotProps = computed(() => ({\n      next: group.next,\n      prev: group.prev,\n      select: group.select,\n      isSelected: group.isSelected,\n    }))\n\n    const hasAffixes = computed(() => {\n      switch (props.showArrows) {\n        // Always show arrows on desktop & mobile\n        case 'always': return true\n\n        // Always show arrows on desktop\n        case 'desktop': return !mobile.value\n\n        // Show arrows on mobile when overflowing.\n        // This matches the default 2.2 behavior\n        case true: return isOverflowing.value || Math.abs(scrollOffset.value) > 0\n\n        // Always show on mobile\n        case 'mobile': return (\n          mobile.value ||\n          (isOverflowing.value || Math.abs(scrollOffset.value) > 0)\n        )\n\n        // https://material.io/components/tabs#scrollable-tabs\n        // Always show arrows when\n        // overflowed on desktop\n        default: return (\n          !mobile.value &&\n          (isOverflowing.value || Math.abs(scrollOffset.value) > 0)\n        )\n      }\n    })\n\n    const hasPrev = computed(() => {\n      return Math.abs(scrollOffset.value) > 0\n    })\n\n    const hasNext = computed(() => {\n      // Check one scroll ahead to know the width of right-most item\n      return contentSize.value > Math.abs(scrollOffset.value) + containerSize.value\n    })\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-slide-group',\n          {\n            'v-slide-group--vertical': !isHorizontal.value,\n            'v-slide-group--has-affixes': hasAffixes.value,\n            'v-slide-group--is-overflowing': isOverflowing.value,\n          },\n        ]}\n        tabindex={ (isFocused.value || group.selected.value.length) ? -1 : 0 }\n        onFocus={ onFocus }\n      >\n        { hasAffixes.value && (\n          <div\n            key=\"prev\"\n            class={[\n              'v-slide-group__prev',\n              { 'v-slide-group__prev--disabled': !hasPrev.value },\n            ]}\n            onClick={ () => scrollTo('prev') }\n          >\n            { slots.prev?.(slotProps.value) ?? (\n              <VFadeTransition>\n                <VIcon icon={ isRtl.value ? props.nextIcon : props.prevIcon }></VIcon>\n              </VFadeTransition>\n            )}\n          </div>\n        )}\n\n        <div\n          key=\"container\"\n          ref={ containerRef }\n          class=\"v-slide-group__container\"\n          onScroll={ onScroll }\n        >\n          <div\n            ref={ contentRef }\n            class=\"v-slide-group__content\"\n            style={ contentStyles.value }\n            onTouchstartPassive={ onTouchstart }\n            onTouchmovePassive={ onTouchmove }\n            onTouchendPassive={ onTouchend }\n            onFocusin={ onFocusin }\n            onFocusout={ onFocusout }\n            onKeydown={ onKeydown }\n          >\n            { slots.default?.(slotProps.value) }\n          </div>\n        </div>\n\n        { hasAffixes.value && (\n          <div\n            key=\"next\"\n            class={[\n              'v-slide-group__next',\n              { 'v-slide-group__next--disabled': !hasNext.value },\n            ]}\n            onClick={ () => scrollTo('next') }\n          >\n            { slots.next?.(slotProps.value) ?? (\n              <VFadeTransition>\n                <VIcon icon={ isRtl.value ? props.prevIcon : props.nextIcon }></VIcon>\n              </VFadeTransition>\n            )}\n          </div>\n        )}\n      </props.tag>\n    ))\n\n    return {\n      selected: group.selected,\n      scrollTo,\n      scrollOffset,\n      focus,\n    }\n  },\n})\n\nexport type VSlideGroup = InstanceType<typeof VSlideGroup>\n","import type { InjectionKey } from 'vue'\nimport type { GroupProvide } from '@/composables/group'\n\nexport const VTabsSymbol: InjectionKey<GroupProvide> = Symbol.for('vuetify:v-tabs')\n","// Styles\nimport './VTab.sass'\n\n// Components\nimport { VBtn } from '@/components/VBtn'\n\n// Composables\nimport { useTextColor } from '@/composables/color'\n\n// Utilities\nimport { computed, ref } from 'vue'\nimport { animate, genericComponent, omit, standardEasing, useRender } from '@/util'\nimport { makeVBtnProps } from '@/components/VBtn/VBtn'\n\n// Types\nimport type { PropType } from 'vue'\nimport { VTabsSymbol } from './shared'\n\nexport const VTab = genericComponent()({\n  name: 'VTab',\n\n  props: {\n    fixed: Boolean,\n    title: String,\n\n    sliderColor: String,\n    hideSlider: Boolean,\n\n    direction: {\n      type: String as PropType<'horizontal' | 'vertical'>,\n      default: 'horizontal',\n    },\n\n    ...omit(makeVBtnProps({\n      selectedClass: 'v-tab--selected',\n      variant: 'text' as const,\n    }), [\n      'active',\n      'block',\n      'flat',\n      'location',\n      'position',\n      'symbol',\n    ]),\n  },\n\n  setup (props, { slots, attrs }) {\n    const { textColorClasses: sliderColorClasses, textColorStyles: sliderColorStyles } = useTextColor(props, 'sliderColor')\n    const isHorizontal = computed(() => props.direction === 'horizontal')\n    const isSelected = ref(false)\n\n    const rootEl = ref<VBtn>()\n    const sliderEl = ref<HTMLElement>()\n\n    function updateSlider ({ value }: { value: boolean }) {\n      isSelected.value = value\n\n      if (value) {\n        const prevEl: HTMLElement | undefined = rootEl.value?.$el.parentElement?.querySelector('.v-tab--selected .v-tab__slider')\n        const nextEl = sliderEl.value\n\n        if (!prevEl || !nextEl) return\n\n        const color = getComputedStyle(prevEl).color\n\n        const prevBox = prevEl.getBoundingClientRect()\n        const nextBox = nextEl.getBoundingClientRect()\n\n        const xy = isHorizontal.value ? 'x' : 'y'\n        const XY = isHorizontal.value ? 'X' : 'Y'\n        const rightBottom = isHorizontal.value ? 'right' : 'bottom'\n        const widthHeight = isHorizontal.value ? 'width' : 'height'\n\n        const prevPos = prevBox[xy]\n        const nextPos = nextBox[xy]\n        const delta = prevPos > nextPos\n          ? prevBox[rightBottom] - nextBox[rightBottom]\n          : prevBox[xy] - nextBox[xy]\n        const origin =\n          Math.sign(delta) > 0 ? (isHorizontal.value ? 'right' : 'bottom')\n          : Math.sign(delta) < 0 ? (isHorizontal.value ? 'left' : 'top')\n          : 'center'\n        const size = Math.abs(delta) + (Math.sign(delta) < 0 ? prevBox[widthHeight] : nextBox[widthHeight])\n        const scale = size / Math.max(prevBox[widthHeight], nextBox[widthHeight])\n        const initialScale = prevBox[widthHeight] / nextBox[widthHeight]\n\n        const sigma = 1.5\n        animate(nextEl, {\n          backgroundColor: [color, ''],\n          transform: [\n            `translate${XY}(${delta}px) scale${XY}(${initialScale})`,\n            `translate${XY}(${delta / sigma}px) scale${XY}(${(scale - 1) / sigma + 1})`,\n            '',\n          ],\n          transformOrigin: Array(3).fill(origin),\n        }, {\n          duration: 225,\n          easing: standardEasing,\n        })\n      }\n    }\n\n    useRender(() => {\n      const [btnProps] = VBtn.filterProps(props)\n\n      return (\n        <VBtn\n          _as=\"VTab\"\n          symbol={ VTabsSymbol }\n          ref={ rootEl }\n          class={[\n            'v-tab',\n          ]}\n          tabindex={ isSelected.value ? 0 : -1 }\n          role=\"tab\"\n          aria-selected={ String(isSelected.value) }\n          active={ false }\n          block={ props.fixed }\n          maxWidth={ props.fixed ? 300 : undefined }\n          rounded={ 0 }\n          { ...btnProps }\n          { ...attrs }\n          onGroup:selected={ updateSlider }\n        >\n          { slots.default ? slots.default() : props.title }\n          { !props.hideSlider && (\n            <div\n              ref={ sliderEl }\n              class={[\n                'v-tab__slider',\n                sliderColorClasses.value,\n              ]}\n              style={ sliderColorStyles.value }\n            />\n          )}\n        </VBtn>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VTab = InstanceType<typeof VTab>\n","// Styles\nimport './VTabs.sass'\n\n// Components\nimport { VSlideGroup } from '@/components/VSlideGroup'\nimport { VTab } from './VTab'\n\n// Composables\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeTagProps } from '@/composables/tag'\nimport { provideDefaults } from '@/composables/defaults'\nimport { useBackgroundColor } from '@/composables/color'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { convertToUnit, genericComponent, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport { VTabsSymbol } from './shared'\n\nexport type TabItem = string | Record<string, any>\n\nfunction parseItems (items: TabItem[] | undefined) {\n  if (!items) return []\n\n  return items.map(item => {\n    if (typeof item === 'string') return { title: item, value: item }\n\n    return item\n  })\n}\n\nexport const VTabs = genericComponent()({\n  name: 'VTabs',\n\n  props: {\n    alignTabs: {\n      type: String as PropType<'start' | 'title' | 'center' | 'end'>,\n      default: 'start',\n    },\n    color: String,\n    direction: {\n      type: String as PropType<'horizontal' | 'vertical'>,\n      default: 'horizontal',\n    },\n    fixedTabs: Boolean,\n    items: {\n      type: Array as PropType<TabItem[]>,\n      default: () => ([]),\n    },\n    stacked: Boolean,\n    bgColor: String,\n    grow: Boolean,\n    height: {\n      type: [Number, String],\n      default: undefined,\n    },\n    hideSlider: Boolean,\n    sliderColor: String,\n    modelValue: null,\n    mandatory: {\n      type: [Boolean, String] as PropType<boolean | 'force'>,\n      default: 'force',\n    },\n\n    ...makeDensityProps(),\n    ...makeTagProps(),\n  },\n\n  emits: {\n    'update:modelValue': (v: unknown) => true,\n  },\n\n  setup (props, { slots }) {\n    const model = useProxiedModel(props, 'modelValue')\n    const parsedItems = computed(() => parseItems(props.items))\n    const { densityClasses } = useDensity(props)\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'bgColor'))\n\n    provideDefaults({\n      VTab: {\n        color: toRef(props, 'color'),\n        direction: toRef(props, 'direction'),\n        stacked: toRef(props, 'stacked'),\n        fixed: toRef(props, 'fixedTabs'),\n        sliderColor: toRef(props, 'sliderColor'),\n        hideSlider: toRef(props, 'hideSlider'),\n      },\n    })\n\n    useRender(() => (\n      <VSlideGroup\n        v-model={ model.value }\n        class={[\n          'v-tabs',\n          `v-tabs--${props.direction}`,\n          `v-tabs--align-tabs-${props.alignTabs}`,\n          {\n            'v-tabs--fixed-tabs': props.fixedTabs,\n            'v-tabs--grow': props.grow,\n            'v-tabs--stacked': props.stacked,\n          },\n          densityClasses.value,\n          backgroundColorClasses.value,\n        ]}\n        style={[\n          { '--v-tabs-height': convertToUnit(props.height) },\n          backgroundColorStyles.value,\n        ]}\n        role=\"tablist\"\n        symbol={ VTabsSymbol }\n        mandatory={ props.mandatory }\n        direction={ props.direction }\n      >\n        { slots.default ? slots.default() : parsedItems.value.map(item => (\n          <VTab { ...item } key={ item.title } />\n        ))}\n      </VSlideGroup>\n    ))\n\n    return {}\n  },\n})\n\nexport type VTabs = InstanceType<typeof VTabs>\n","// Types\nimport type {\n  DirectiveBinding,\n} from 'vue'\n\n// Utilities\nimport { keys } from '@/util'\n\nexport interface TouchHandlers {\n  start?: (wrapperEvent: { originalEvent: TouchEvent } & TouchData) => void\n  end?: (wrapperEvent: { originalEvent: TouchEvent } & TouchData) => void\n  move?: (wrapperEvent: { originalEvent: TouchEvent } & TouchData) => void\n  left?: (wrapper: TouchData) => void\n  right?: (wrapper: TouchData) => void\n  up?: (wrapper: TouchData) => void\n  down?: (wrapper: TouchData) => void\n}\n\nexport interface TouchData {\n  touchstartX: number\n  touchstartY: number\n  touchmoveX: number\n  touchmoveY: number\n  touchendX: number\n  touchendY: number\n  offsetX: number\n  offsetY: number\n}\n\nexport type TouchWrapper = TouchHandlers & TouchData\n\nexport interface TouchValue extends TouchHandlers {\n  parent?: boolean\n  options?: AddEventListenerOptions\n}\n\nexport interface TouchStoredHandlers {\n  touchstart: (e: TouchEvent) => void\n  touchend: (e: TouchEvent) => void\n  touchmove: (e: TouchEvent) => void\n}\n\nexport interface TouchDirectiveBinding extends Omit<DirectiveBinding, 'value'> {\n  value?: TouchValue\n}\n\nconst handleGesture = (wrapper: TouchWrapper) => {\n  const { touchstartX, touchendX, touchstartY, touchendY } = wrapper\n  const dirRatio = 0.5\n  const minDistance = 16\n  wrapper.offsetX = touchendX - touchstartX\n  wrapper.offsetY = touchendY - touchstartY\n\n  if (Math.abs(wrapper.offsetY) < dirRatio * Math.abs(wrapper.offsetX)) {\n    wrapper.left && (touchendX < touchstartX - minDistance) && wrapper.left(wrapper)\n    wrapper.right && (touchendX > touchstartX + minDistance) && wrapper.right(wrapper)\n  }\n\n  if (Math.abs(wrapper.offsetX) < dirRatio * Math.abs(wrapper.offsetY)) {\n    wrapper.up && (touchendY < touchstartY - minDistance) && wrapper.up(wrapper)\n    wrapper.down && (touchendY > touchstartY + minDistance) && wrapper.down(wrapper)\n  }\n}\n\nfunction touchstart (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchstartX = touch.clientX\n  wrapper.touchstartY = touch.clientY\n\n  wrapper.start?.({ originalEvent: event, ...wrapper })\n}\n\nfunction touchend (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchendX = touch.clientX\n  wrapper.touchendY = touch.clientY\n\n  wrapper.end?.({ originalEvent: event, ...wrapper })\n\n  handleGesture(wrapper)\n}\n\nfunction touchmove (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchmoveX = touch.clientX\n  wrapper.touchmoveY = touch.clientY\n\n  wrapper.move?.({ originalEvent: event, ...wrapper })\n}\n\nfunction createHandlers (value: TouchHandlers = {}): TouchStoredHandlers {\n  const wrapper = {\n    touchstartX: 0,\n    touchstartY: 0,\n    touchendX: 0,\n    touchendY: 0,\n    touchmoveX: 0,\n    touchmoveY: 0,\n    offsetX: 0,\n    offsetY: 0,\n    left: value.left,\n    right: value.right,\n    up: value.up,\n    down: value.down,\n    start: value.start,\n    move: value.move,\n    end: value.end,\n  }\n\n  return {\n    touchstart: (e: TouchEvent) => touchstart(e, wrapper),\n    touchend: (e: TouchEvent) => touchend(e, wrapper),\n    touchmove: (e: TouchEvent) => touchmove(e, wrapper),\n  }\n}\n\nfunction mounted (el: HTMLElement, binding: TouchDirectiveBinding) {\n  const value = binding.value\n  const target = value?.parent ? el.parentElement : el\n  const options = value?.options ?? { passive: true }\n  const uid = binding.instance?.$.uid // TODO: use custom uid generator\n\n  if (!target || !uid) return\n\n  const handlers = createHandlers(binding.value)\n\n  target._touchHandlers = target._touchHandlers ?? Object.create(null)\n  target._touchHandlers![uid] = handlers\n\n  keys(handlers).forEach(eventName => {\n    target.addEventListener(eventName, handlers[eventName], options)\n  })\n}\n\nfunction unmounted (el: HTMLElement, binding: TouchDirectiveBinding) {\n  const target = binding.value?.parent ? el.parentElement : el\n  const uid = binding.instance?.$.uid\n\n  if (!target?._touchHandlers || !uid) return\n\n  const handlers = target._touchHandlers[uid]\n\n  keys(handlers).forEach(eventName => {\n    target.removeEventListener(eventName, handlers[eventName])\n  })\n\n  delete target._touchHandlers[uid]\n}\n\nexport const Touch = {\n  mounted,\n  unmounted,\n}\n\nexport default Touch\n","// Styles\nimport './VWindow.sass'\n\n// Components\nimport { VBtn } from '@/components/VBtn'\n\n// Directives\nimport { Touch } from '@/directives/touch'\n\n// Composables\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useGroup } from '@/composables/group'\nimport { useLocale, useRtl } from '@/composables/locale'\n\n// Utilities\nimport { computed, provide, ref, watch } from 'vue'\nimport { genericComponent, useRender } from '@/util'\n\n// Types\nimport type { ComputedRef, InjectionKey, PropType, Ref } from 'vue'\nimport type { GroupItemProvide, GroupProvide } from '@/composables/group'\nimport type { IconValue } from '@/composables/icons'\nimport type { TouchHandlers } from '@/directives/touch'\n\nexport type VWindowSlots = {\n  default: [{ group: GroupProvide }]\n  additional: [{ group: GroupProvide }]\n  prev: [{ props: ControlProps }]\n  next: [{ props: ControlProps }]\n}\n\ntype WindowProvide = {\n  transition: ComputedRef<undefined | string>\n  transitionCount: Ref<number>\n  transitionHeight: Ref<undefined | string>\n  isReversed: Ref<boolean>\n  rootRef: Ref<HTMLElement | undefined>\n}\n\ntype ControlProps = {\n  icon: IconValue\n  class: string\n  onClick: () => void\n  ariaLabel: string\n}\n\nexport const VWindowSymbol: InjectionKey<WindowProvide> = Symbol.for('vuetify:v-window')\nexport const VWindowGroupSymbol: InjectionKey<GroupItemProvide> = Symbol.for('vuetify:v-window-group')\n\nexport const VWindow = genericComponent<VWindowSlots>()({\n  name: 'VWindow',\n\n  directives: {\n    Touch,\n  },\n\n  props: {\n    continuous: Boolean,\n    nextIcon: {\n      type: [Boolean, String, Function, Object] as PropType<IconValue>,\n      default: '$next',\n    },\n    prevIcon: {\n      type: [Boolean, String, Function, Object] as PropType<IconValue>,\n      default: '$prev',\n    },\n    reverse: Boolean,\n    showArrows: {\n      type: [Boolean, String],\n      validator: (v: any) => typeof v === 'boolean' || v === 'hover',\n    },\n    touch: {\n      type: [Object, Boolean] as PropType<boolean | TouchHandlers>,\n      default: undefined,\n    },\n    direction: {\n      type: String,\n      default: 'horizontal',\n    },\n\n    modelValue: null,\n    disabled: Boolean,\n    selectedClass: {\n      type: String,\n      default: 'v-window-item--active',\n    },\n    // TODO: mandatory should probably not be exposed but do this for now\n    mandatory: {\n      default: 'force' as const,\n    },\n\n    ...makeTagProps(),\n    ...makeThemeProps(),\n  },\n\n  emits: {\n    'update:modelValue': (v: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { isRtl } = useRtl()\n    const { t } = useLocale()\n\n    const group = useGroup(props, VWindowGroupSymbol)\n\n    const rootRef = ref()\n    const isRtlReverse = computed(() => isRtl.value ? !props.reverse : props.reverse)\n    const isReversed = ref(false)\n    const transition = computed(() => {\n      const axis = props.direction === 'vertical' ? 'y' : 'x'\n      const reverse = isRtlReverse.value ? !isReversed.value : isReversed.value\n      const direction = reverse ? '-reverse' : ''\n\n      return `v-window-${axis}${direction}-transition`\n    })\n    const transitionCount = ref(0)\n    const transitionHeight = ref<undefined | string>(undefined)\n\n    const activeIndex = computed(() => {\n      return group.items.value.findIndex(item => group.selected.value.includes(item.id))\n    })\n\n    watch(activeIndex, (newVal, oldVal) => {\n      const itemsLength = group.items.value.length\n      const lastIndex = itemsLength - 1\n\n      if (itemsLength <= 2) {\n        isReversed.value = newVal < oldVal\n      } else if (newVal === lastIndex && oldVal === 0) {\n        isReversed.value = true\n      } else if (newVal === 0 && oldVal === lastIndex) {\n        isReversed.value = false\n      } else {\n        isReversed.value = newVal < oldVal\n      }\n    })\n\n    provide(VWindowSymbol, {\n      transition,\n      isReversed,\n      transitionCount,\n      transitionHeight,\n      rootRef,\n    })\n\n    const canMoveBack = computed(() => props.continuous || activeIndex.value !== 0)\n    const canMoveForward = computed(() => props.continuous || activeIndex.value !== group.items.value.length - 1)\n\n    function prev () {\n      canMoveBack.value && group.prev()\n    }\n\n    function next () {\n      canMoveForward.value && group.next()\n    }\n\n    const arrows = computed(() => {\n      const arrows = []\n\n      const prevProps = {\n        icon: isRtl.value ? props.nextIcon : props.prevIcon,\n        class: `v-window__${isRtlReverse.value ? 'right' : 'left'}`,\n        onClick: group.prev,\n        ariaLabel: t('$vuetify.carousel.prev'),\n      }\n\n      arrows.push(canMoveBack.value\n        ? slots.prev\n          ? slots.prev({ props: prevProps })\n          : <VBtn { ...prevProps } />\n        : <div />\n      )\n\n      const nextProps = {\n        icon: isRtl.value ? props.prevIcon : props.nextIcon,\n        class: `v-window__${isRtlReverse.value ? 'left' : 'right'}`,\n        onClick: group.next,\n        ariaLabel: t('$vuetify.carousel.next'),\n      }\n\n      arrows.push(canMoveForward.value\n        ? slots.next\n          ? slots.next({ props: nextProps })\n          : <VBtn { ...nextProps } />\n        : <div />\n      )\n\n      return arrows\n    })\n\n    const touchOptions = computed(() => {\n      if (props.touch === false) return props.touch\n\n      const options: TouchHandlers = {\n        left: () => {\n          isRtlReverse.value ? prev() : next()\n        },\n        right: () => {\n          isRtlReverse.value ? next() : prev()\n        },\n        start: ({ originalEvent }) => {\n          originalEvent.stopPropagation()\n        },\n      }\n\n      return {\n        ...options,\n        ...(props.touch === true ? {} : props.touch),\n      }\n    })\n\n    useRender(() => (\n      <props.tag\n        ref={ rootRef }\n        class={[\n          'v-window',\n          {\n            'v-window--show-arrows-on-hover': props.showArrows === 'hover',\n          },\n          themeClasses.value,\n        ]}\n        v-touch={ touchOptions.value }\n      >\n        <div\n          class=\"v-window__container\"\n          style={{\n            height: transitionHeight.value,\n          }}\n        >\n          { slots.default?.({ group }) }\n\n          { props.showArrows !== false && (\n            <div class=\"v-window__controls\">\n              { arrows.value }\n            </div>\n          )}\n        </div>\n\n        { slots.additional?.({ group }) }\n      </props.tag>\n    ))\n\n    return {\n      group,\n    }\n  },\n})\n\nexport type VWindow = InstanceType<typeof VWindow>\n","// Directives\nimport Touch from '@/directives/touch'\n\n// Composables\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\nimport { makeLazyProps, useLazy } from '@/composables/lazy'\nimport { MaybeTransition } from '@/composables/transition'\nimport { useSsrBoot } from '@/composables/ssrBoot'\n\n// Utilities\nimport { computed, inject, nextTick, ref } from 'vue'\nimport { convertToUnit, genericComponent, useRender } from '@/util'\n\n// Types\nimport { VWindowGroupSymbol, VWindowSymbol } from './VWindow'\n\nexport const VWindowItem = genericComponent()({\n  name: 'VWindowItem',\n\n  directives: {\n    Touch,\n  },\n\n  props: {\n    reverseTransition: {\n      type: [Boolean, String],\n      default: undefined,\n    },\n    transition: {\n      type: [Boolean, String],\n      default: undefined,\n    },\n\n    ...makeGroupItemProps(),\n    ...makeLazyProps(),\n  },\n\n  emits: {\n    'group:selected': (val: { value: boolean }) => true,\n  },\n\n  setup (props, { slots }) {\n    const window = inject(VWindowSymbol)\n    const groupItem = useGroupItem(props, VWindowGroupSymbol)\n    const { isBooted } = useSsrBoot()\n\n    if (!window || !groupItem) throw new Error('[Vuetify] VWindowItem must be used inside VWindow')\n\n    const isTransitioning = ref(false)\n    const hasTransition = computed(() => window.isReversed.value ? props.reverseTransition !== false : props.transition !== false)\n\n    function onAfterTransition () {\n      if (!isTransitioning.value || !window) {\n        return\n      }\n\n      // Finalize transition state.\n      isTransitioning.value = false\n      if (window.transitionCount.value > 0) {\n        window.transitionCount.value -= 1\n\n        // Remove container height if we are out of transition.\n        if (window.transitionCount.value === 0) {\n          window.transitionHeight.value = undefined\n        }\n      }\n    }\n\n    function onBeforeTransition () {\n      if (isTransitioning.value || !window) {\n        return\n      }\n\n      // Initialize transition state here.\n      isTransitioning.value = true\n\n      if (window.transitionCount.value === 0) {\n        // Set initial height for height transition.\n        window.transitionHeight.value = convertToUnit(window.rootRef.value?.clientHeight)\n      }\n\n      window.transitionCount.value += 1\n    }\n\n    function onTransitionCancelled () {\n      onAfterTransition() // This should have the same path as normal transition end.\n    }\n\n    function onEnterTransition (el: Element) {\n      if (!isTransitioning.value) {\n        return\n      }\n\n      nextTick(() => {\n        // Do not set height if no transition or cancelled.\n        if (!hasTransition.value || !isTransitioning.value || !window) {\n          return\n        }\n\n        // Set transition target height.\n        window.transitionHeight.value = convertToUnit(el.clientHeight)\n      })\n    }\n\n    const transition = computed(() => {\n      const name = window.isReversed.value\n        ? props.reverseTransition\n        : props.transition\n\n      return !hasTransition.value ? false : {\n        name: typeof name !== 'string' ? window.transition.value : name,\n        onBeforeEnter: onBeforeTransition,\n        onAfterEnter: onAfterTransition,\n        onEnterCancelled: onTransitionCancelled,\n        onBeforeLeave: onBeforeTransition,\n        onAfterLeave: onAfterTransition,\n        onLeaveCancelled: onTransitionCancelled,\n        onEnter: onEnterTransition,\n      }\n    })\n\n    const { hasContent } = useLazy(props, groupItem.isSelected)\n\n    useRender(() => (\n      <MaybeTransition transition={ isBooted.value && transition.value } >\n        <div\n          class={[\n            'v-window-item',\n            groupItem.selectedClass.value,\n          ]}\n          v-show={ groupItem.isSelected.value }\n        >\n          { hasContent.value && slots.default?.() }\n        </div>\n      </MaybeTransition>\n    ))\n\n    return {}\n  },\n})\n\nexport type VWindowItem = InstanceType<typeof VWindowItem>\n","<template>\r\n  <v-card class=\"mx-auto\">\r\n    <v-layout>\r\n      <v-app-bar density=\"compact\" :elevation=\"1\">\r\n        <v-tabs\r\n          v-model=\"tab\"\r\n          density=\"compact\"          \r\n          bg-color=\"transparent\"\r\n          color=\"basil\"\r\n          \r\n        >\r\n          <v-tab value=\"t1\"  color=\"primary\" bg-color=\"error\"\r\n            >Insertar</v-tab\r\n          >\r\n          <v-tab value=\"t2\">Ver</v-tab>\r\n          <v-tab value=\"t3\">Imprimir</v-tab>\r\n        </v-tabs>\r\n        <v-app-bar-title>En desarrollo mental</v-app-bar-title>\r\n      </v-app-bar>\r\n\r\n      <v-main>\r\n        <v-container fluid>\r\n          <v-row dense>\r\n            <v-col cols=\"12\" xs=\"12\" sm=\"12\" xl=\"12\" md=\"12\" lg=\"12\">\r\n            <v-window v-model=\"tab\">\r\n              <v-window-item value=\"t1\"> <question-answer-form/> </v-window-item>\r\n\r\n              <v-window-item value=\"t2\"> Two </v-window-item>\r\n\r\n              <v-window-item value=\"t3\"> Three gfdg dfgdfgdf g dgdfgdfg</v-window-item>\r\n            </v-window>\r\n          </v-col>\r\n          </v-row>\r\n        </v-container>\r\n      </v-main>\r\n    </v-layout>\r\n  </v-card>\r\n</template>\r\n\r\n<script>\r\nimport QuestionAnswerForm from '@/components/formsUtils/QuestionAnswerForm.vue';\r\n/**\r\n * 0  -> 1 radio\r\n * 1  -> 2 check\r\n * 2  -> 4 texto\r\n * 3  -> 8 grid Respuestas\r\n *\r\n */\r\n\r\nexport default {\r\ncomponents:{QuestionAnswerForm},\r\n  data: () => ({\r\n    tab: null,\r\n  }),\r\n\r\n  computed: {},\r\n\r\n  methods: {},\r\n};\r\n</script>\r\n\r\n<style></style>\r\n","import { render } from \"./GFrmView.vue?vue&type=template&id=12f018cb\"\nimport script from \"./GFrmView.vue?vue&type=script&lang=js\"\nexport * from \"./GFrmView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\Vuesjs\\\\epidemiologia\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// Styles\nimport './VAppBar.sass'\n\n// Components\nimport { makeVToolbarProps, VToolbar } from '@/components/VToolbar/VToolbar'\n\n// Composables\nimport { makeLayoutItemProps, useLayoutItem } from '@/composables/layout'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useSsrBoot } from '@/composables/ssrBoot'\n\n// Utilities\nimport { computed, ref, toRef } from 'vue'\nimport { genericComponent, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { VToolbarSlots } from '@/components/VToolbar/VToolbar'\n\nexport const VAppBar = genericComponent<VToolbarSlots>()({\n  name: 'VAppBar',\n\n  props: {\n    // TODO: Implement scrolling techniques\n    // hideOnScroll: Boolean\n    // invertedScroll: Boolean\n    // collapseOnScroll: Boolean\n    // elevateOnScroll: Boolean\n    // shrinkOnScroll: Boolean\n    // fadeImageOnScroll: Boolean\n    modelValue: {\n      type: Boolean,\n      default: true,\n    },\n    location: {\n      type: String as PropType<'top' | 'bottom'>,\n      default: 'top',\n      validator: (value: any) => ['top', 'bottom'].includes(value),\n    },\n\n    ...makeVToolbarProps(),\n    ...makeLayoutItemProps(),\n\n    height: {\n      type: [Number, String],\n      default: 64,\n    },\n  },\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const vToolbarRef = ref()\n    const isActive = useProxiedModel(props, 'modelValue')\n    const height = computed(() => {\n      const height: number = vToolbarRef.value?.contentHeight ?? 0\n      const extensionHeight: number = vToolbarRef.value?.extensionHeight ?? 0\n\n      return (height + extensionHeight)\n    })\n    const { ssrBootStyles } = useSsrBoot()\n    const { layoutItemStyles } = useLayoutItem({\n      id: props.name,\n      order: computed(() => parseInt(props.order, 10)),\n      position: toRef(props, 'location'),\n      layoutSize: height,\n      elementSize: height,\n      active: isActive,\n      absolute: toRef(props, 'absolute'),\n    })\n\n    useRender(() => {\n      const [toolbarProps] = VToolbar.filterProps(props)\n\n      return (\n        <VToolbar\n          ref={ vToolbarRef }\n          class={[\n            'v-app-bar',\n            {\n              'v-app-bar--bottom': props.location === 'bottom',\n            },\n          ]}\n          style={{\n            ...layoutItemStyles.value,\n            height: undefined,\n            ...ssrBootStyles.value,\n          }}\n          { ...toolbarProps }\n          v-slots={ slots }\n        />\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VAppBar = InstanceType<typeof VAppBar>\n"],"names":["VAppBarTitle","genericComponent","name","props","makeVToolbarTitleProps","setup","_ref","slots","useRender","_createVNode","VToolbarTitle","_mergeProps","VLayout","makeLayoutProps","layoutClasses","layoutStyles","getLayoutItem","items","layoutRef","createLayout","value","default","bias","val","c","x","Math","abs","sign","calculateUpdatedOffset","selectedElement","containerSize","contentSize","isRtl","currentScrollOffset","isHorizontal","clientSize","clientWidth","clientHeight","offsetStart","offsetLeft","offsetTop","adjustedOffsetStart","totalSize","itemOffset","additionalOffset","max","min","calculateCenteredOffset","_ref2","offsetCentered","VSlideGroupSymbol","Symbol","for","VSlideGroup","centerActive","Boolean","direction","type","String","symbol","nextIcon","IconValue","prevIcon","showArrows","validator","v","includes","makeTagProps","makeGroupProps","selectedClass","emits","useRtl","mobile","useDisplay","group","useGroup","isOverflowing","ref","scrollOffset","computed","resizeRef","containerRef","contentRect","containerRect","useResizeObserver","contentRef","firstSelectedIndex","selected","length","findIndex","item","id","lastSelectedIndex","IN_BROWSER","frame","watch","cancelAnimationFrame","requestAnimationFrame","sizeProperty","children","disableTransition","startTouch","startOffset","onTouchstart","e","touches","onTouchmove","onTouchend","maxScrollOffset","onScroll","isFocused","onFocusin","el","composedPath","onFocusout","onFocus","relatedTarget","contains","focus","onKeydown","key","location","querySelector","nextElementSibling","previousElementSibling","firstElementChild","lastElementChild","focusable","querySelectorAll","filter","hasAttribute","scrollTo","newAbsoluteOffset","clamp","contentStyles","scrollAmount","transform","transition","willChange","slotProps","next","prev","select","isSelected","hasAffixes","hasPrev","hasNext","tag","onClick","VFadeTransition","VIcon","VTabsSymbol","VTab","fixed","title","sliderColor","hideSlider","omit","makeVBtnProps","variant","attrs","textColorClasses","sliderColorClasses","textColorStyles","sliderColorStyles","useTextColor","rootEl","sliderEl","updateSlider","prevEl","$el","parentElement","nextEl","color","getComputedStyle","prevBox","getBoundingClientRect","nextBox","xy","XY","rightBottom","widthHeight","prevPos","nextPos","delta","origin","size","scale","initialScale","sigma","animate","backgroundColor","transformOrigin","Array","fill","duration","easing","standardEasing","btnProps","VBtn","undefined","parseItems","map","VTabs","alignTabs","fixedTabs","stacked","bgColor","grow","height","Number","modelValue","mandatory","makeDensityProps","model","useProxiedModel","parsedItems","densityClasses","useDensity","backgroundColorClasses","backgroundColorStyles","useBackgroundColor","toRef","provideDefaults","$event","convertToUnit","handleGesture","wrapper","touchstartX","touchendX","touchstartY","touchendY","dirRatio","minDistance","offsetX","offsetY","left","right","up","down","touchstart","event","touch","changedTouches","clientX","clientY","start","originalEvent","touchend","end","touchmove","touchmoveX","touchmoveY","move","createHandlers","arguments","mounted","binding","target","parent","options","passive","uid","instance","$","handlers","_touchHandlers","Object","create","keys","forEach","eventName","addEventListener","unmounted","removeEventListener","Touch","VWindowSymbol","VWindowGroupSymbol","VWindow","directives","continuous","Function","reverse","disabled","makeThemeProps","themeClasses","provideTheme","t","useLocale","rootRef","isRtlReverse","isReversed","axis","transitionCount","transitionHeight","activeIndex","newVal","oldVal","itemsLength","lastIndex","provide","canMoveBack","canMoveForward","arrows","prevProps","icon","class","ariaLabel","push","nextProps","touchOptions","stopPropagation","_withDirectives","additional","_resolveDirective","VWindowItem","reverseTransition","makeGroupItemProps","makeLazyProps","window","inject","groupItem","useGroupItem","isBooted","useSsrBoot","Error","isTransitioning","hasTransition","onAfterTransition","onBeforeTransition","onTransitionCancelled","onEnterTransition","nextTick","onBeforeEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onAfterLeave","onLeaveCancelled","onEnter","hasContent","useLazy","MaybeTransition","_vShow","_createBlock","_component_v_card","_component_v_layout","_component_v_app_bar","density","elevation","_component_v_tabs","_ctx","tab","_component_v_tab","_component_v_app_bar_title","_component_v_main","_component_v_container","fluid","_component_v_row","dense","_component_v_col","cols","xs","sm","xl","md","lg","_component_v_window","_component_v_window_item","_component_question_answer_form","components","QuestionAnswerForm","data","methods","__exports__","render","VAppBar","makeVToolbarProps","makeLayoutItemProps","vToolbarRef","isActive","contentHeight","extensionHeight","ssrBootStyles","layoutItemStyles","useLayoutItem","order","parseInt","position","layoutSize","elementSize","active","absolute","toolbarProps","VToolbar"],"sourceRoot":""}